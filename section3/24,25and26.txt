#GIT LOG CONFIG

-> To leave the history of commits in lines, use the command:

    git log --pretty = oneline

-> To see the line graph of the commits, use the command:

    git log --pretty = oneline --graph

-> To see the graph of all the branches, use the command:

    git log --pretty = oneline --graph --all

-> To view commits from a date, use the command:

    git log --since = Ex ('Jan 1 2018')

-> To view the commits until a specific date, use the command:

    git log --until = Ex ('Jan 1 2018')

-> To view commits between dates (ps: do not take the commits of the days written in the command), use the command:

    git log since = Ex ('Jan 1 2018') --until = Ex ('Jan 6 2018')

-> To have a simple way to display git log, use the command:
    
    git shortlog

-> To see only the number of commits and the author, use the command:

    git shortlog -sn

-> To filter the commits by author, use the command:

    git log author = 'Name'

-> More git log commands at: https://git-scm.com/docs/git-log

#REFLOG

-> The git reflog work with the HEAD pointer on everything that has already been worked on in git,
where it shows the HEAD reference number in front of the hash
of the commit.
-> It serves to give a more complete report of the commits.

    git reflog

-> PS: shows up the things that have suffered a git reset --hard



